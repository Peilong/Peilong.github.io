<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS/EGR 222 Systems Programming | Peilong Li</title>
    <link>https://Peilong.github.io/courses/cs222/</link>
      <atom:link href="https://Peilong.github.io/courses/cs222/index.xml" rel="self" type="application/rss+xml" />
    <description>CS/EGR 222 Systems Programming</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2019 Peilong Li</copyright><lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://Peilong.github.io/img/icon-192.png</url>
      <title>CS/EGR 222 Systems Programming</title>
      <link>https://Peilong.github.io/courses/cs222/</link>
    </image>
    
    <item>
      <title>Course Overview</title>
      <link>https://Peilong.github.io/courses/cs222/overview/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://Peilong.github.io/courses/cs222/overview/</guid>
      <description>&lt;h2 id=&#34;course-coverage&#34;&gt;Course Coverage&lt;/h2&gt;
&lt;p&gt;This course covers advanced programming and machine representation of data and data structures, including dynamic structures and files. Topics include C language syntax, memory allocation, run-time data organization, function linkage and parameter passing, and the relationship between high-level and machine languages. C is the primary language of instruction with Java being a comparative language. Linux operating system and command line skills will be introduced throughout the course.&lt;/p&gt;
&lt;h2 id=&#34;student-learning-outcomes&#34;&gt;Student Learning Outcomes&lt;/h2&gt;
&lt;p&gt;By the end of the course, students will be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apply knowledge of computing and mathematics appropriate to the discipline, including common data structures and basic algorithms, to solve problems&lt;/li&gt;
&lt;li&gt;Analyze a problem and identify and define the computing requirements appropriate to its solution&lt;/li&gt;
&lt;li&gt;Design, implement, and evaluate a computer-based system, process, component or program, including operating systems, to meet desired needs&lt;/li&gt;
&lt;li&gt;Function effectively on teams and use software engineering principles to accomplish a common goal&lt;/li&gt;
&lt;li&gt;Understand fundamentals of procedural programming with applications in electrical and computer engineering and embedded systems&lt;/li&gt;
&lt;li&gt;Understand hardware and software elements of data communications and computer networking&lt;/li&gt;
&lt;li&gt;Compare and contrast the features of the Java and C programming languages&lt;/li&gt;
&lt;li&gt;Manage memory allocation explicitly&lt;/li&gt;
&lt;li&gt;Perform low-level file access in programs&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Policy Statements</title>
      <link>https://Peilong.github.io/courses/cs222/policy/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://Peilong.github.io/courses/cs222/policy/</guid>
      <description>&lt;h2 id=&#34;course-schedule&#34;&gt;Course Schedule&lt;/h2&gt;
&lt;p&gt;The most up-to-date course schedule will be posted on course website schedule page: &lt;a href=&#34;https://peilong.github.io/courses/cs222/schedule/&#34;&gt;https://peilong.github.io/courses/cs222/schedule/&lt;/a&gt;. Students are responsible for checking the schedule regularly. Schedule page will include: 1) teaching topics for each meeting; 2) reading assignments for each week and 3) special notes on specific days.&lt;/p&gt;
&lt;h2 id=&#34;course-announcements--discussion&#34;&gt;Course Announcements &amp;amp; Discussion&lt;/h2&gt;
&lt;p&gt;All course announcements will be sent to your Etown email accounts via Canvas Announcements. You are responsible for signing up for this service and checking your emails regularly.&lt;/p&gt;
&lt;p&gt;Every student should sign up for Microsoft Teams and join the course discussion channel &amp;ldquo;EGR-CS222-SP21&amp;rdquo;. Discussions are encouraged to be posted on this channel. Private instant messages can be sent directly to your recipient, e.g. the instructor &amp;ldquo;Dr. Li&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Join my Teams group: &lt;a href=&#34;https://teams.microsoft.com/l/channel/19%3ac178fe7c3e9249d4a0a47788724560b4%40thread.tacv2/EGR-CS222-SP21?groupId=81ffa3c7-aa45-454a-b495-7f43c78e5024&amp;amp;tenantId=1d884f12-a0d7-42f0-8b15-3a91c853bcb5&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;attendance-policies&#34;&gt;Attendance Policies&lt;/h2&gt;
&lt;p&gt;Attendance is expected of every student at every lecture.  Students are responsible for all content covered in class as well as assigned book chapters.  Students should come to class with their text books, having read the material to be covered that day.  Students who have not prepared for class may be asked to leave.&lt;/p&gt;
&lt;p&gt;Except in the case of documented emergencies, neither exams nor in-class labs can be made up afterwards.  For excused absences, students must arrange to take the exam or do the lab before the normally scheduled time.  Arrangements must be made with the instructor at least two weeks prior to the scheduled time.&lt;/p&gt;
&lt;p&gt;Students are expected to maintain an attitude of respect at all times toward their colleagues, the equipment, and the instructor.  Students are expected to refrain from using the computers for non-course related purposes during class time and will be penalized 1% of the final grade for each occurrence.  Cell phones and similar devices should be turned off before entering the classroom.  Students who use offensive language, misuse computing facilities, or are otherwise disruptive of the classroom will be asked to leave.&lt;/p&gt;
&lt;h2 id=&#34;statement-on-school-closure&#34;&gt;Statement on School Closure&lt;/h2&gt;
&lt;p&gt;In the event that classes do not meet because Elizabethtown College is closed or delayed due to inclement weather or some other emergency, the slides that would have been covered during the missed classes will posted through Piazza group.  Students are expected to do the assigned reading, review the slides, and e-mail the instructor with any questions.  There will also be an opportunity to ask questions about the material when classes resume.&lt;/p&gt;
&lt;p&gt;If a scheduled exam or lab is missed, it will normally be made up on the day that classes resume.  If the College is closed on a day when a project is due, the project due date will also normally be extended until the day when classes resume.  If circumstances render either of these makeup policies unreasonable, the instructor will send an e-mail explaining an alternative makeup opportunity to each student’s Elizabethtown e-mail account.&lt;/p&gt;
&lt;h2 id=&#34;statement-on-plagiarism&#34;&gt;Statement on Plagiarism&lt;/h2&gt;
&lt;p&gt;Please refer to the Student Handbook for the college’s policy.  All projects and assignments must be completed by students individually, without assistance from anyone other than the instructor.  Students can discuss the course material with each other at a conceptual level, but each student must do his or her own work.  For projects, exams, and all other activities in the course, students are expected to act according to the official policy on academic dishonesty and the highest standards of personal integrity.&lt;/p&gt;
&lt;p&gt;The first infraction of academic honesty in this course will carry a penalty of a 0 for the project, lab, or exam in question and a reduction of a full letter grade in the final grade.  If a second infraction occurs, the students involved will fail the course, and the instructor will seek the maximum penalty possible under the college’s regulations, up to and including expulsion.&lt;/p&gt;
&lt;h2 id=&#34;statement-on-disability&#34;&gt;Statement on Disability&lt;/h2&gt;
&lt;p&gt;Full statement can be found at &lt;a href=&#34;https://elizabethtown-my.sharepoint.com/:w:/g/personal/ouimetc_etown_edu/EfZ-QooKt_VPjgwsWJz230wB3Rb6CIHsPvE0xuqWCpr-UA?e=4%3acZzjpW&amp;amp;at=9&#34;&gt;link&lt;/a&gt;. Elizabethtown College welcomes otherwise qualified students with disabilities to participate in all of its courses, programs, services, and activities. If you have a documented disability and would like to request accommodations in order to access course material, activities, or requirements, please contact the Director of Disability Services, Lynne Davies, by phone (361-1227) or e-mail &lt;a href=&#34;mailto:daviesl@etown.edu&#34;&gt;daviesl@etown.edu&lt;/a&gt;. If your documentation meets the college’s documentation guidelines, you will be given a letter from Disability Services for each of your professors.  Students experiencing certain documented temporary conditions, such as post-concussive symptoms, may also qualify for temporary academic accommodations and adjustments. As early as possible in the semester, set up an appointment to meet with the instructor to discuss the academic adjustments specified in your accommodations letter as they pertain to my class.&lt;/p&gt;
&lt;h2 id=&#34;covid-related-expectations&#34;&gt;COVID-related Expectations&lt;/h2&gt;
&lt;p&gt;All students are expected to adhere to the established community expectations around safety, including: daily digital health reporting, physical distancing, proper wearing of facial coverings within buildings and classrooms and when within six feet of individuals outdoors, frequent handwashing, and participation in cleaning and sanitizing protocols as requested. You will be turned away from class if you do not have a face covering. Students diagnosed with a health condition that precludes mask wearing can contact Lynne Davies in Disability Services (&lt;a href=&#34;mailto:daviesl@etown.edu&#34;&gt;daviesl@etown.edu&lt;/a&gt;) to request remote learning as a reasonable accommodation.&lt;/p&gt;
&lt;p&gt;If you are exhibiting any symptoms of COVID or fail to pass the daily health screen, do not come to class.
Failure to adhere to the established community expectations around safety will result in notification of Campus Security and application of the student conduct process for failure to comply, endangering the well-being of others, and/or disorderly conduct. The student code of conduct applies also to participation in all virtual activities, including Zoom sessions and discussion boards&lt;/p&gt;
&lt;h2 id=&#34;statement-on-religious-observances&#34;&gt;Statement on Religious Observances&lt;/h2&gt;
&lt;p&gt;The College is eager to facilitate individual religious beliefs and practices whenever possible while retaining course student learning outcomes. It is your responsibility to meet with the class instructor in advance to request arrangements related to your religious observances that may conflict with this class, and to make appropriate plans to make up any missed work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grading Policies</title>
      <link>https://Peilong.github.io/courses/cs222/grading/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://Peilong.github.io/courses/cs222/grading/</guid>
      <description>&lt;h2 id=&#34;grading-weights&#34;&gt;Grading Weights&lt;/h2&gt;
&lt;p&gt;The final grade for this course depends upon the grades and scores earned on course components weighted as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2%&lt;/strong&gt; : Persistence. Including attendance and in-class question answering.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;6%&lt;/strong&gt; : A number of in-class pop quizzes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;18%&lt;/strong&gt;: 6 individual homework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;24%&lt;/strong&gt;: 3 team projects.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;15%&lt;/strong&gt;: 5 in-class labs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;15%&lt;/strong&gt;: 1 midterm exam.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;20%&lt;/strong&gt;: Final exam.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Grades will be computed by rounding numerical percentages to the nearest integer and applying the following table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Letter&lt;/th&gt;
&lt;th&gt;Range&lt;/th&gt;
&lt;th&gt;Letter&lt;/th&gt;
&lt;th&gt;Range&lt;/th&gt;
&lt;th&gt;Letter&lt;/th&gt;
&lt;th&gt;Range&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;93-100&lt;/td&gt;
&lt;td&gt;B-&lt;/td&gt;
&lt;td&gt;80-82&lt;/td&gt;
&lt;td&gt;D+&lt;/td&gt;
&lt;td&gt;67-69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A-&lt;/td&gt;
&lt;td&gt;90-92&lt;/td&gt;
&lt;td&gt;C+&lt;/td&gt;
&lt;td&gt;77-79&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;63-66&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B+&lt;/td&gt;
&lt;td&gt;87-89&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;73-76&lt;/td&gt;
&lt;td&gt;D-&lt;/td&gt;
&lt;td&gt;60-62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;83-86&lt;/td&gt;
&lt;td&gt;C-&lt;/td&gt;
&lt;td&gt;70-72&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;0-59&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code class=&#34;language-Note&#34;&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;in-class-labs&#34;&gt;In-class Labs&lt;/h2&gt;
&lt;p&gt;All labs are to be done in class, with the assistance of the instructor. Each assignment will be given near the beginning of a class and must be uploaded to Canvas (&lt;a href=&#34;https://etown.instructure.com/&#34;&gt;https://etown.instructure.com/&lt;/a&gt;) before the end of the class. To receive full credit, a programming assignment must compile, but partial credit will be awarded based on the understanding of the material demonstrated by the student’s code.&lt;/p&gt;
&lt;h2 id=&#34;homework&#34;&gt;Homework&lt;/h2&gt;
&lt;p&gt;All homework assignments have to be completed individually in this course. Typically, you will have about two weeks to complete each assignment.&lt;/p&gt;
&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;
&lt;p&gt;All projects are team projects in this course. For each project, all students must form teams of two members. Students are permitted to select their own teams; however, no two students may partner up for more than one project. In other words, each team will be different for each project. Students should select their teams by using the Groups tab under People, on the Canvas webpage.&lt;/p&gt;
&lt;p&gt;Teams are responsible for dividing their workload and meeting offline for at least 3 times. Documented meeting minutes have to be submitted as part of the deliverable. Except under extreme circumstances, all members of the team will receive the same grade for each project. One member of each team is designated the leader. The files for each project should be zipped up and uploaded by the team leader using Canvas before the due date. Projects must not be stored in a public folder. &lt;strong&gt;If the project does not compile, the student will receive a score of 0.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;grading-and-late-policy&#34;&gt;Grading and Late Policy&lt;/h2&gt;
&lt;p&gt;Homework and projects will be graded based on the following criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Correctness: Finding the right answer&lt;/li&gt;
&lt;li&gt;Formatting:	Displaying the right answer according to instructions&lt;/li&gt;
&lt;li&gt;Style and Documentation: Producing readable code with appropriate comments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In general, homework and projects will be graded with the &lt;em&gt;diff&lt;/em&gt; utility. For that reason, it is imperative that project output matches sample output to the character.&lt;/p&gt;
&lt;p&gt;Late assignment will lose &lt;img src=&#34;https://latex.codecogs.com/png.latex?%5Cdpi%7B150%7D%20%5Cfn_phv%20%5Clarge%202%5E%7B%28n-1%29%7D&#34; alt=&#34;equation&#34;&gt; points per day, including weekends and holidays. For example, -1 after 1 day, -2 after 2 days, -4 after 3 days … until 8+ days students will receive 0 score.  &lt;strong&gt;Under no circumstances should any student disclose their code, or copy the code written by other students or from an outside source. Both students will receive 0 score on the disclosed/copied assignment.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Course Schedule</title>
      <link>https://Peilong.github.io/courses/cs222/schedule/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://Peilong.github.io/courses/cs222/schedule/</guid>
      <description>&lt;h2 id=&#34;schedule&#34;&gt;Schedule&lt;/h2&gt;
&lt;p&gt;Note this tentative schedule is subject to change. Please check the schedule regularly.&lt;/p&gt;
&lt;p&gt;Last updated: 02/18/2021&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Week&lt;/th&gt;
&lt;th&gt;Starting&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;th&gt;Reading&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1/25/21&lt;/td&gt;
&lt;td&gt;M: Lec1: Course introduction&lt;/td&gt;
&lt;td&gt;Reading 1&lt;/td&gt;
&lt;td&gt;HW1 out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec2: Linux system&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;HW1 due on Thur midnight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec3: C language and compiling&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2/1/21&lt;/td&gt;
&lt;td&gt;M: Lec4: Data representation and data types&lt;/td&gt;
&lt;td&gt;Reading 2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec5: Input and output&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec6: Conditionals - if statement and range checking&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2/8/21&lt;/td&gt;
&lt;td&gt;M: Lec7: Switch statement and scope&lt;/td&gt;
&lt;td&gt;Reading 3&lt;/td&gt;
&lt;td&gt;HW2 out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: PE1 – Flowchart and Debugging&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lab 1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2/15/21&lt;/td&gt;
&lt;td&gt;M: Lec8: Writing a simple Makefile&lt;/td&gt;
&lt;td&gt;Reading 4&lt;/td&gt;
&lt;td&gt;Project 1 out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec9: While loops and do-while loops&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec10: For loops&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;2/22/21&lt;/td&gt;
&lt;td&gt;M: PE2: Conditionals and loops&lt;/td&gt;
&lt;td&gt;Reading 5&lt;/td&gt;
&lt;td&gt;HW2 due Mon; HW3 out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lab 2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec11: Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3/1/21&lt;/td&gt;
&lt;td&gt;M: Lec12: Function examples&lt;/td&gt;
&lt;td&gt;Reading 6&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: No Class - Day of Service&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec13: Advanced Makefile - compiling multiple files&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;3/8/21&lt;/td&gt;
&lt;td&gt;M: Lec14: Pointers and pointer arguments&lt;/td&gt;
&lt;td&gt;Reading 7&lt;/td&gt;
&lt;td&gt;HW3 due Mon.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec15: More on pointers&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Midterm preview; bring your questions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;3/15/21&lt;/td&gt;
&lt;td&gt;M: Midterm exam&lt;/td&gt;
&lt;td&gt;Reading 8&lt;/td&gt;
&lt;td&gt;Project 1 due Mon;   Project 2 out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: PE3: Functions and pointers&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lab3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;3/22/21&lt;/td&gt;
&lt;td&gt;M: Lec16: 1D Arrays&lt;/td&gt;
&lt;td&gt;Reading 9&lt;/td&gt;
&lt;td&gt;HW4 out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec17: 2D arrays; arrays with functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec18: Character arrays and strings&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;3/29/21&lt;/td&gt;
&lt;td&gt;M: Lec19: Structures&lt;/td&gt;
&lt;td&gt;Reading 10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec20: Nested structures&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: No Class - College Holiday&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;4/5/21&lt;/td&gt;
&lt;td&gt;M: PE4: Structures&lt;/td&gt;
&lt;td&gt;Reading 11&lt;/td&gt;
&lt;td&gt;HW4 due Mon; HW5   out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lab 4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec21: Dynamic memory allocation&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;4/12/21&lt;/td&gt;
&lt;td&gt;M: Lec22: Dynamic memory allocation examples&lt;/td&gt;
&lt;td&gt;Reading 12&lt;/td&gt;
&lt;td&gt;Project 2 due Mon;   Project 3 out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec23: Linked lists - add/search&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec24: Linked lists - delete&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;4/19/21&lt;/td&gt;
&lt;td&gt;M: Lec25: Ordered linked lists&lt;/td&gt;
&lt;td&gt;Reading 13&lt;/td&gt;
&lt;td&gt;HW5 due Mon; HW6   out.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: PE5: Dynamic memory allocation&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lab 5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;4/26/21&lt;/td&gt;
&lt;td&gt;M: Lec26: File I/O&lt;/td&gt;
&lt;td&gt;Reading 14&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Lec27: Character and Line I/O&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Lec28: Bitwise operators&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;5/3/21&lt;/td&gt;
&lt;td&gt;M: Final exam preview&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;HW6 due Mon.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W: Final exam QA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;F: Final exam QA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;5/10/21&lt;/td&gt;
&lt;td&gt;Final exam: Wed 5/10, 11 AM - 2 PM&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Project 3 due Mon.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;weekly-reading-assignments&#34;&gt;Weekly Reading Assignments&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Week #&lt;/th&gt;
&lt;th&gt;Reading #&lt;/th&gt;
&lt;th&gt;Assignments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Reading 1&lt;/td&gt;
&lt;td&gt;C: 1.1, 2.1-2.8, 7.4, Linux: 1.1-1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Reading 2&lt;/td&gt;
&lt;td&gt;C: 3.1-3.4, Linux: 2.1-2.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Reading 3&lt;/td&gt;
&lt;td&gt;C: 3.5-3.7, Linux: 6.1-6.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Reading 4&lt;/td&gt;
&lt;td&gt;C: 4.1-4.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Reading 5&lt;/td&gt;
&lt;td&gt;C: 4.5, 4.8-4.11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Reading 6&lt;/td&gt;
&lt;td&gt;C: 5.1-5.2, 5.4, 5.11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Reading 7&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://beginnersbook.com/2014/01/c-pointers/&#34;&gt;Tutorial1&lt;/a&gt;, &lt;a href=&#34;https://beginnersbook.com/2014/01/c-pointer-to-pointer/&#34;&gt;Tutorial2&lt;/a&gt;, &lt;a href=&#34;https://beginnersbook.com/2014/01/c-passing-pointers-to-functions/&#34;&gt;Tutorial3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Reading 8&lt;/td&gt;
&lt;td&gt;C: 1.6, 5.3-5.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Reading 9&lt;/td&gt;
&lt;td&gt;C: 6.1-6.4, 6.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Reading 10&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/dynamic-memory-allocation-in-c-using-malloc-calloc-free-and-realloc/&#34;&gt;Tutorial4&lt;/a&gt;, Linux 7.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;Reading 11&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/linked-list-set-1-introduction/&#34;&gt;Tutorial5&lt;/a&gt;, C: 6.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;Reading 12&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.sanfoundry.com/c-tutorials-ordered-unordered-singly-linked-lists/&#34;&gt;Tutorial6&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;Reading 13&lt;/td&gt;
&lt;td&gt;C: 7.5, 7.7, Linux: 4.1-4.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;Reading 14&lt;/td&gt;
&lt;td&gt;All notes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Software</title>
      <link>https://Peilong.github.io/courses/cs222/software/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://Peilong.github.io/courses/cs222/software/</guid>
      <description>&lt;p&gt;You need an Integrated Development Environment (IDE) that contains a GCC compiler, and a machine that supports Linux command line in this course.&lt;/p&gt;
&lt;p&gt;There are many IDEs you can choose, e.g., Eclipse, Code::Blocks, Visual Studio, and CLion, etc, but for the purpose of in-class demonstration, I will stick with Visual Studio Code.&lt;/p&gt;
&lt;h2 id=&#34;visual-studio-code&#34;&gt;Visual Studio Code&lt;/h2&gt;
&lt;p&gt;Downlaod VS Code from this &lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;link&lt;/a&gt;. Follow the instructions from HW1 to install the C/C++ extensions.&lt;/p&gt;
&lt;h2 id=&#34;c-compiler&#34;&gt;C Compiler&lt;/h2&gt;
&lt;p&gt;For Windows users, install &lt;a href=&#34;http://mingw-w64.org/doku.php/download/mingw-builds&#34;&gt;MinGW-64&lt;/a&gt; for the GCC compiler. For Mac users, install Apple&#39;s version of GCC - Clang: &lt;a href=&#34;https://www.cs.auckland.ac.nz/~paul/C/Mac/index.php&#34;&gt;Tutorial 1&lt;/a&gt;, or &lt;a href=&#34;http://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/&#34;&gt;Tutorial 2&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-command-line-tool&#34;&gt;Linux Command Line Tool&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows Options&lt;/strong&gt;: 1) use Windows and Ubuntu 18.04 (or newer) dual-boot systems; 2) running Ubuntu on a virtual machine (e.g. virtualbox); 3) Ubuntu App on Windows 10; 4) Use Windows PowerShell; 5) Use the campus server cs64.etown.edu.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MacOS Options&lt;/strong&gt;: Use the default Terminal.app application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux Options&lt;/strong&gt;: You are on your own.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All the software and operating systems are available on the computers in the Esbenshade 281, Hoover 108 and Nicarry 208 computer laboratories and in the Computer Science commons area (E284).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
